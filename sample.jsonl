{"messages": [{"role": "system", "content": "You are an expert AI coding assistant providing clean and accurate code."}, {"role": "user", "content": "Python Pandas를 사용해서 'data.csv' 파일을 읽고, 처음 5개 행을 보여주는 코드를 작성해줘."}, {"role": "assistant", "content": "import pandas as pd\n\n# CSV 파일을 데이터프레임으로 읽기\ndf = pd.read_csv('data.csv')\n\n# 처음 5개 행 출력\nprint(df.head())"}]}
{"messages": [{"role": "system", "content": "You are an expert AI coding assistant providing clean and accurate code."}, {"role": "user", "content": "JavaScript에서 async/await를 사용해 fetch API로 데이터를 가져오는 예시를 보여줘."}, {"role": "assistant", "content": "async function fetchData(url) {\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    console.log(data);\n  } catch (error) {\n    console.error('Fetching data failed:', error);\n  }\n}\n\nfetchData('https://jsonplaceholder.typicode.com/todos/1');"}]}
{"messages": [{"role": "system", "content": "You are an expert AI coding assistant providing clean and accurate code."}, {"role": "user", "content": "클릭하면 색이 바뀌는 간단한 HTML 버튼과 CSS 스타일을 만들어줘."}, {"role": "assistant", "content": "<!DOCTYPE html>\n<html>\n<head>\n<style>\n.color-button {\n  background-color: dodgerblue;\n  color: white;\n  padding: 10px 20px;\n  border: none;\n  cursor: pointer;\n}\n.color-button:active {\n  background-color: tomato;\n}\n</style>\n</head>\n<body>\n\n<button class=\"color-button\">Click me</button>\n\n</body>\n</html>"}]}
{"messages": [{"role": "system", "content": "You are an expert AI coding assistant providing clean and accurate code."}, {"role": "user", "content": "`users` 테이블과 `orders` 테이블을 `user_id`로 조인하는 SQL 쿼리를 작성해줘."}, {"role": "assistant", "content": "SELECT users.name, orders.product_name, orders.order_date\nFROM users\nINNER JOIN orders ON users.id = orders.user_id;"}]}
{"messages": [{"role": "system", "content": "You are an expert AI coding assistant providing clean and accurate code."}, {"role": "user", "content": "C++로 두 정수를 더하는 함수를 만들어줘."}, {"role": "assistant", "content": "#include <iostream>\n\nint add(int a, int b) {\n    return a + b;\n}\n\nint main() {\n    std::cout << \"The sum is: \" << add(5, 3) << std::endl;\n    return 0;\n}"}]}
{"messages": [{"role": "system", "content": "You are an expert AI coding assistant providing clean and accurate code."}, {"role": "user", "content": "Python으로 스택(Stack) 자료구조를 클래스로 간단하게 구현해줘. push, pop, is_empty, peek 메서드가 있어야 해."}, {"role": "assistant", "content": "class Stack:\n    def __init__(self):\n        self.items = []\n\n    def is_empty(self):\n        return not self.items\n\n    def push(self, item):\n        self.items.append(item)\n\n    def pop(self):\n        if not self.is_empty():\n            return self.items.pop()\n        return None\n\n    def peek(self):\n        if not self.is_empty():\n            return self.items[-1]\n        return None"}]}
{"messages": [{"role": "system", "content": "You are an expert AI coding assistant providing clean and accurate code."}, {"role": "user", "content": "이메일 주소를 검증하는 JavaScript 정규표현식을 만들어줘."}, {"role": "assistant", "content": "const emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;"}]}
{"messages": [{"role": "system", "content": "You are an expert AI coding assistant providing clean and accurate code."}, {"role": "user", "content": "TypeScript를 사용하는 React에서 name 프롭(prop)을 받아서 인사하는 간단한 함수형 컴포넌트를 만들어줘."}, {"role": "assistant", "content": "import React from 'react';\n\ninterface GreetingProps {\n  name: string;\n}\n\nconst Greeting: React.FC<GreetingProps> = ({ name }) => {\n  return <h1>Hello, {name}!</h1>;\n};\n\nexport default Greeting;"}]}
{"messages": [{"role": "system", "content": "You are an expert AI coding assistant providing clean and accurate code."}, {"role": "user", "content": "간단한 Python Flask 앱을 위한 Dockerfile을 만들어줘."}, {"role": "assistant", "content": "# Python 3.9 버전을 기반 이미지로 사용\nFROM python:3.9-slim\n\n# 작업 디렉토리 설정\nWORKDIR /app\n\n# 현재 디렉토리의 모든 파일을 컨테이너의 /app으로 복사\nCOPY . /app\n\n# requirements.txt에 명시된 패키지 설치\nRUN pip install --no-cache-dir -r requirements.txt\n\n# 컨테이너 외부로 5000번 포트 노출\nEXPOSE 5000\n\n# 컨테이너 시작 시 실행될 명령어\nCMD [\"python\", \"app.py\"]"}]}
{"messages": [{"role": "system", "content": "You are an expert AI coding assistant providing clean and accurate code."}, {"role": "user", "content": "이 파이썬 코드를 자바스크립트로 바꿔줘:\nfor i in range(5):\n  print(i)"}, {"role": "assistant", "content": "for (let i = 0; i < 5; i++) {\n  console.log(i);\n}"}]}
{"messages": [{"role": "system", "content": "You are an expert AI coding assistant providing clean and accurate code."}, {"role": "user", "content": "iOS 개발을 위해 Swift 언어로 이름을 입력받아 인사말을 반환하는 함수를 만들어줘."}, {"role": "assistant", "content": "import Foundation\n\nfunc createGreeting(forName name: String) -> String {\n    return \"Hello, \\(name)! Welcome to Swift.\"\n}\n\nlet greeting = createGreeting(forName: \"Alice\")\nprint(greeting)"}]}
{"messages": [{"role": "system", "content": "You are an expert AI coding assistant providing clean and accurate code."}, {"role": "user", "content": "my_list = [10, 20, 30]을 만들고 print(my_list[3])을 실행하면 에러가 나. 왜 그런지, 어떻게 고쳐야 하는지 알려줘."}, {"role": "assistant", "content": "`IndexError`가 발생했을 거예요. 리스트의 인덱스는 0부터 시작하기 때문에, `my_list`의 마지막 요소 인덱스는 2입니다. `my_list[3]`은 범위를 벗어난 값이므로 에러가 납니다. 마지막 요소를 원하시면 `my_list[2]` 또는 `my_list[-1]`을 사용해야 합니다."}]}